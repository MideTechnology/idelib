<?xml version="1.0" encoding="utf-8"?>
<Schema type="mide.ss.cmd" version="1" readversion="1">
    <SchemaInfo>
        <Author>Derek Witt</Author>
        <Description>Schema to capture any interaction that might be needed to pass commands into the command file and format data responses</Description>
    </SchemaInfo>
	
	    <!-- Base EBML elements. Required. (but not used by any code at this time)-->
    <MasterElement name="EBML" id="0x1A45DFA3" mandatory="1" multiple="0" minver="1">Set the EBML characteristics of the data to follow. Each EBML document has to start with this.
        <UIntegerElement name="EBMLVersion" id="0x4286" multiple="0" mandatory="1" default="1" minver="1">The version of EBML parser used to create the file.</UIntegerElement>
        <UIntegerElement name="EBMLReadVersion" id="0x42F7" multiple="0" mandatory="1" default="1" minver="1">The minimum EBML version a parser has to support to read this file.</UIntegerElement>
        <UIntegerElement name="EBMLMaxIDLength" id="0x42F2" multiple="0" mandatory="1" default="4" minver="1">The maximum length of the IDs you'll find in this file (4 or less in Matroska).</UIntegerElement>
        <UIntegerElement name="EBMLMaxSizeLength" id="0x42F3" multiple="0" mandatory="1" default="8" minver="1">The maximum length of the sizes you'll find in this file (8 or less in Matroska). This does not override the element size indicated at the beginning of an element. Elements that have an indicated size which is larger than what is allowed by EBMLMaxSizeLength shall be considered invalid.</UIntegerElement>
        <StringElement name="DocType" id="0x4282" multiple="0" mandatory="1" default="mide.ss.cmd" minver="1">A string that describes the type of document that follows this EBML header. This describes a firmware package</StringElement>
        <UIntegerElement name="DocTypeVersion" id="0x4287" multiple="0" mandatory="1" default="1" minver="1">The version of DocType interpreter used to create the file.</UIntegerElement>
        <UIntegerElement name="DocTypeReadVersion" id="0x4285" multiple="0" mandatory="1" default="1" minver="1">The minimum DocType version an interpreter has to support to read this file.</UIntegerElement>
        <BinaryElement name="Void" global="1" id="0xEC" multiple="1" minver="1">Used to void damaged data, to avoid unexpected behaviors when using damaged data. The content is discarded. Also used to reserve space in a sub-element for later use.</BinaryElement>
        <BinaryElement name="CRC-32" global="1" id="0xBF" multiple="0" minver="1" webm="0">The CRC is computed on all the data of the Master element it's in. The CRC element should be the first in it's parent master for easier reading. All level 1 elements should include a CRC-32. The CRC in use is the IEEE CRC32 Little Endian</BinaryElement>
        <MasterElement name="SignatureSlot" global="1" id="0x1B538667" multiple="1" webm="0">Contain signature of some (coming) elements in the stream.
            <UIntegerElement name="SignatureAlgo" id="0x7E8A" multiple="0" webm="0">Signature algorithm used (1=RSA, 2=elliptic).</UIntegerElement>
            <UIntegerElement name="SignatureHash" id="0x7E9A" multiple="0" webm="0">Hash algorithm used (1=SHA1-160, 2=MD5).</UIntegerElement>
            <BinaryElement name="SignaturePublicKey" id="0x7EA5" multiple="0" webm="0">The public key to use with the algorithm (in the case of a PKI-based signature).</BinaryElement>
            <BinaryElement name="Signature" id="0x7EB5" multiple="0" webm="0">The signature of the data (until a new.</BinaryElement>
            <MasterElement name="SignatureElements" id="0x7E5B" multiple="0" webm="0">Contains elements that will be used to compute the signature.
                <MasterElement name="SignatureElementList" id="0x7E7B" multiple="1" webm="0">A list consists of a number of consecutive elements that represent one case where data is used in signature. Ex: <i>Cluster|Block|BlockAdditional</i> means that the BlockAdditional of all Blocks in all Clusters is used for encryption.
                    <BinaryElement name="SignedElement" id="0x6532" multiple="1" webm="0">An element ID whose data will be used to compute the signature.</BinaryElement>
                </MasterElement>
            </MasterElement>
        </MasterElement>
    </MasterElement>

    <!-- These endpoints are kept so that FW can continue to respond to legacy firmware updates and other actions properly, the IDs directly map to ASCII codes-->
    <MasterElement name="RecStart" id="0x7273" mandatory="0" multiple="0">"rs" Initiate a recording as if button was pressed</MasterElement>
    <MasterElement name="LegacyFW" id="0x6677" mandatory="0" multiple="0">"fw" Update App FW (legacy interface)</MasterElement>
    <MasterElement name="LegacyBL" id="0x626C" mandatory="0" multiple="0">"bl" Update Bootloader Image (legacy)</MasterElement>
    <MasterElement name="LegacyAll" id="0x7561" mandatory="0" multiple="0">"ua" Update FW, userpage, and bootloader (legacy)</MasterElement>
    <MasterElement name="FlashPackage" id="0x706B" mandatory="0" multiple="0">"pk" Flash meta-package (arbitrary flash segments)</MasterElement>
    <MasterElement name="LegacyUP" id="0x7570" mandatory="0" multiple="0">"up" Update User Page (legacy)</MasterElement>
    <MasterElement name="LegacyESP" id="0x7577" mandatory="0" multiple="0">"uw" Flash an image to ESP32</MasterElement>
    <!-- "FlashKeys" is not present here due to an issue with encoding, but it was only used in development so it's OK to drop it-->

    <MasterElement name="EBMLCommand" id="0x80" mandatory="0" multiple="0">An EBML formatted command directive
        <MasterElement name="WiFiScan" id="0x81" mandatory="0" multiple="0">Initiate a Wifi Scan </MasterElement>
        <MasterElement name="ApplyPackage" id="0x82" mandatory="0" multiple="0">Apply a firmware meta-package
            <UnicodeElement name="PackagePath" id="0x4000" mandatory="1" multiple="0">Path to package to apply</UnicodeElement>
            <UIntegerElement name="RebootAfter" id="0x4001" mandatory="0" multiple="0">non-zero to reboot after applying, default to 1 if not present</UIntegerElement>
        </MasterElement>
        <MasterElement name="ESPFW" id="0x83" mandatory="0" multiple="0">Apply a file as ESP32 firmware
            <UnicodeElement name="PackagePath" id="0x4100" multiple="0" mandatory="1">Path to ESP32 package</UnicodeElement>
        </MasterElement>
        <MasterElement name="SetWiFi" id="0x84">
            <MasterElement name="AP" id="0x4200" multiple="1" mandatory="1">
                <UnicodeElement name="SSID" id="0x4201" multiple="0" mandatory="1" />
                <UnicodeElement name="Password" id="0x4202" multiple="0" mandatory="0" />
                <UIntegerElement name="Selected" id="0x4203" multiple="0" mandatory="0" />
            </MasterElement>
        </MasterElement>
        <MasterElement name="QueryWiFi" id="0x85">Get a response for current WiFi State</MasterElement>
    </MasterElement>

    <MasterElement name="EBMLResponse" id="0x84" multiple="0" mandatory="0">Response payload to above EBML command payload. Not all commands generate a response
        <UIntegerElement name="ResponseIdx" id="0x5000" multiple="0" mandatory="1">Incrementing index, will bump by one for each command repsonse that is registered, starting at 0 after device reset</UIntegerElement>
        <UIntegerElement name="CMDQueueDepth" id="0x5100" multiple="0" mandatory="1">Available space in command queue on device, a value of 0 means any new commands issued will be dropped</UIntegerElement>
        <MasterElement name="WiFiScanResult" id="0x5200" multiple="0" mandatory="0">
            <UIntegerElement name="ScanVersion" id="0x5201" multiple="0" mandatory="1">Will default to 1 if not present</UIntegerElement>
            <MasterElement name="AP" id="0x5203" multiple="1" mandatory="1">Access point definition
                <UnicodeElement name="SSID" id="0x5204" multiple="0" mandatory="1">Network SSID</UnicodeElement>
                <UIntegerElement name="RSSI" id="0x5205" multiple="0" mandatory="0">Signal Strength, 0-100, where 100 is perfect, absent field means SSID is in the list for another reason but was not seen in the scan</UIntegerElement>
                <UIntegerElement name="AuthType" id="0x5206" multiple="0" mandatory="1">0 means open, 1 is any kind of secured</UIntegerElement>
                <UIntegerElement name="Known" id="0x5207" multiple="0" mandatory="1">0 is unknown, 1 means device has auth info for this network</UIntegerElement>
            </MasterElement>
        </MasterElement>
    </MasterElement>
</Schema>
