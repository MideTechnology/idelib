name: Unit test on push and PR


on: [push, pull_request, workflow_dispatch]


jobs:
  unit-tests:
    name: Run Unit Tests

    strategy:
      fail-fast: false
      matrix:
        os: [windows-latest, ubuntu-latest, macos-latest]
        python-version: ['3.6', '3.7', '3.8', '3.9', '3.10']

    env:
      OS: ${{ matrix.os }}
      PYTHON-VERSION: ${{ matrix.python-version }}

    runs-on: ${{ matrix.os }}

    steps:

      - name: Setup Python
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}

      - name: Upgrade pip
        run: python -m pip install --upgrade pip

      - name: Checkout code
        uses: actions/checkout@v2

      - name: Get pip Cache Location
        id: pip-cache
        run: echo "::set-output name=dir::$(pip cache dir)"

      # http://man7.org/linux/man-pages/man1/date.1.html
      - name: Get Date
        id: get-date
        run: echo "::set-output name=date::$(/bin/date -u "+%Y%m%d")"
        shell: bash

      - name: Setup pip Cache
        uses: actions/cache@v2
        with:
          path: ${{ steps.pip-cache.outputs.dir }}
          key: ${{ runner.os }}-${{ matrix.python-version }}-${{ steps.get-date.outputs.date }}-pip-${{ hashFiles('**/setup.py') }}

      - name: Install package & (test) dependencies
      - run: python -m pip install .[test,docs]

      - name: Run Unit Tests
        run: python -m pytest ./testing/ --cov=idelib --cov-report=xml -n auto
      - name: Run Docs test
        run: sphinx-build -W -b html docs/source docs/html
      - name: Run Docstring Tests
        run: sphinx-build -W -b doctest docs/source docs/doctest

      - name: Generate Codecov Report
        uses: codecov/codecov-action@v2
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          env_vars: OS,PYTHON-VERSION
          files: ./coverage.xml
          name: ${{ matrix.os }} ${{ matrix.python-version }}
          verbose: true
