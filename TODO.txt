Slam Stick Lab To-Do List
=========================

*Note:* See also the idelib TODO list, as well as the individual TODO items 
noted in the code ("TODO:" in comments, "@todo" in doc strings. This list 
includes some of the latter, but not all.


Bugs to Fix (short-term)
------------------------
Add zoom limit to main plot view, similar to that recently added to the FFT
view. Zooming in too far doesn't cause the computer to explode, but it does
raise an exception.

Fix "Zoom to Fit All" - doesn't really work very well.


Major items
-----------
Mac OS port. The bulk of the code will 'just work,' but there are a couple of
things (recorder identification, etc.) which will need to be rewritten. Some
of the UI looks kind of weird on a Mac with a Retina display, but this may be
wxPython and not easily corrected. Future releases of wxPython may look better.

Refactor the whole configuration system. It was designed around editing
parameters that could be omitted entirely, matching the configuration EBML,
but fewer and fewer items adhere to that model. It is all overly complex and
brittle.


Minor items
-----------
Multi-threaded plot drawing, so the app won't appear to hang and drawing can 
be interrupted (e.g. by scrolling during redraw).


Very Minor Items
----------------
Scroll wheel support (vertical), maybe middle-click drag as well. Somewhat
trickier than anticipated (event binding, applying zoom, etc.).

Revamp the zooming and navigation to be event-driven, handled as far up the 
chain as possible. Consider using wx.lib.pubsub if it's thread-safe in
conjunction with wxPython views. X axis partially converted; Y axis not.
    
Clean up time range change 'tracking' and 'broadcast'. 

Clean up the 'background operation' system. It's overly complex. 

Clean up lots of things that are over-engineered.


Longer term
-----------
Re-implement the underlying idelib library. See separate TODO list in that
project.

Improve memory management. The hog is really the python-ebml library, though.


'Wish List' items ("it would be nice if...")
--------------------------------------------
Possibly move `devices` to the idelib library; the importer sometimes uses
some of the same information, and it would be better to have it implemented only
once. Probably pretty simple to do, really, so long as the dependencies are
fixed.

Rework the rulerctrl.TimeFormat mode for Timelines so that it will draw more
labels. Automatically adjust precision based on total time length: trim
fractional seconds, seconds, minutes, etc.

Plug-in unit converters. Modify ``Viewer.buildDisplayMenu()`` to
get 'converter' type plug-ins via something similar to the function
``idelib.unit_conversion.getApplicableConverters()``. Since the default
converters are actually part of the ``idelib`` library, it makes more sense
to leave the existing ones as-is rather than converting them to plug-ins like
the Tools.

Plug-in renderers (like FFT, PSD, etc.). This may be a big deal. Convert 
existing ones to plug-ins.

Plug-in exporters. Ones that require additional UI might complicate things.
Maybe the extra parameters could be generalized so that their UI can be
generated dynamically.

